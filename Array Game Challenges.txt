let challenges = {
  0: {
    // CH-A1: A-1 prod ^0.5, cannot buy A gens
    1: { BAmount: new Decimal(1e9), CAmount: new Decimal(1) },
    2: { BAmount: new Decimal(1e8), CAmount: new Decimal(2) },
    3: { BAmount: new Decimal(1.5e12), CAmount: new Decimal(3) },
    4: { BAmount: new Decimal(1e15), CAmount: new Decimal(30) },
    5: { BAmount: new Decimal(2e22), CAmount: new Decimal(50) },
    6: { BAmount: new Decimal(2e36), CAmount: new Decimal(50) },
  },
  1: {
    // CH-A2: A-2 amount divides A-2 prod
    1: { BAmount: new Decimal(1e12), CAmount: new Decimal(10) },
    2: { BAmount: new Decimal(1e15), CAmount: new Decimal(30) },
    3: { BAmount: new Decimal(2e22), CAmount: new Decimal(50) },
    4: { BAmount: new Decimal(2e26), CAmount: new Decimal(50) },
    5: { BAmount: new Decimal(2e32), CAmount: new Decimal(50) },
    6: { BAmount: new Decimal(2e36), CAmount: new Decimal(50) },
  },
  2: {
    // CH-A3: no A-3
    1: { BAmount: new Decimal(1e40), CAmount: new Decimal(50) },
    2: { BAmount: new Decimal(3e47) },
    3: { BAmount: new Decimal(2e62) },
    4: { BAmount: new Decimal(8e78) },
    5: { BAmount: new Decimal(1e97), CAmount: new Decimal(2e4) },
    6: { BAmount: new Decimal(2e113), CAmount: new Decimal(1e6) },
  },
  3: {
    // CH-A4: A gen prod ^0.2
    1: { BAmount: new Decimal(1e68) },
    2: { BAmount: new Decimal(7e83), CAmount: new Decimal(2e4) },
    3: { BAmount: new Decimal(1e115), CAmount: new Decimal(5e6) },
    4: { BAmount: new Decimal(1e120), CAmount: new Decimal(1e7) },
    5: { BAmount: new Decimal(1e140), CAmount: new Decimal(2.5e8) },
    6: { BAmount: new Decimal(5e157), CAmount: new Decimal(1e10) },
  },
  4: {
    // CH-B1: B gens + A boosters cannot be produced, B gens can be bought
    1: { CAmount: new Decimal(1e7), DAmount: new Decimal(1) }, // could be lower?
    2: { CAmount: new Decimal(1e10), DAmount: new Decimal(2) },
    3: { CAmount: new Decimal(1e10), DAmount: new Decimal(5) },
    4: { CAmount: new Decimal(1e18), DAmount: new Decimal(75) }, // not 100% accurate
    5: { CAmount: new Decimal(1e23), DAmount: new Decimal(200) },
    6: { CAmount: new Decimal(6e30), DAmount: new Decimal(1000) },
  },
  5: {
    // CH-B2: no B-1 prod, C-1 makes A-5, A-1 ^0.5
    1: { CAmount: new Decimal(1e12), DAmount: new Decimal(30) },
    2: { CAmount: new Decimal(1e18), DAmount: new Decimal(100) },
    3: { CAmount: new Decimal(1e27), DAmount: new Decimal(400) },
    4: { CAmount: new Decimal(3e32), DAmount: new Decimal(2500) },
    5: { CAmount: new Decimal(2e38), DAmount: new Decimal(3e4) },
    6: { CAmount: new Decimal(1e44), DAmount: new Decimal(4e4) },
  },
  6: {
    // CH-B3: A + B gen prod / 1e35
    1: { CAmount: new Decimal(1e12) }, // could be lower?
    2: { CAmount: new Decimal(2e30), DAmount: new Decimal(150) },
    3: { CAmount: new Decimal(1e35), DAmount: new Decimal(3750) },
    4: { CAmount: new Decimal(1e37), DAmount: new Decimal(2e4) }, // wait for D milestone 12
    5: { CAmount: new Decimal(1e44), DAmount: new Decimal(2e4) }, // could be lower?
    6: { CAmount: new Decimal(2e47), DAmount: new Decimal(4e4) },
  },
  7: {
    // CH-B4: A + B gen prod ^ 0.1
    1: { CAmount: new Decimal(1e51), DAmount: new Decimal(1e5) },
    2: { CAmount: new Decimal(1e55), DAmount: new Decimal(4e5) }, // could be lower? affected by D milestone 16
    3: { CAmount: new Decimal(1e57), DAmount: new Decimal(7e5) }, // could be lower? affected by D milestone 16
    4: { CAmount: new Decimal(1e64), DAmount: new Decimal(1e6) }, // completes around 1e65 and 2.5e6
    5: { CAmount: new Decimal(2e68), DAmount: new Decimal(1e6) }, // completes around 6e69 and 9e6
    6: { CAmount: new Decimal(3e72), DAmount: new Decimal(2e6) }, // completes around 2.3e74 and 8e7
  },
};